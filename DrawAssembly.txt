@0700
#================================================
#METHOD - UpdateBoard
#(INPUT R6 - the address of the glyphs x-pos)
#(INPUT R9 - the Glyph to draws upper left corner)
#================================================
#Setup
MOVI 0x01, R10 #This will be used to move addresses by 1
MOVI 0x10, R11 #Movement in the glyph
MOVI 0x9D, R12 #Vertical Shift by 157

@0703 # Draw Main Ship
LUI 0xA0, R7
LUI 0x10, R2 #Draw16x16
LUI 0x07, R3
MOVI 0x0b, R15
ADD R15, R3
LOAD R7, R6
LUI 0x00, R9
JUC R2

@070b #Draw Ship Shot
ADD R10, R7  # R7 is at ship shot flag
LUI 0x07, R3
MOVI 0x1f, R15
ADD R15, R3
#Check if is shot 
LOAD R7, R6  # R6 is ship shot flag val
LUI 0x00, R15
CMP R6, R15
JEQ R3 #dont draw if not shot
ADD R10, R7 # R7 is at ship shot pos
LOAD R7, R6 # R6 is ship shot address
SUB R12, R6
STOR R6, R7
#Check if off screen
MOV R6, R15
LUI 0xB0, R1
CMP R15, R1
LUI 0x13, R15
JGT R15
#If not offscreen draw
LUI 0x08, R9
LUI 0x11, R15
JUC R15

@071f #Draw Enemy Ship 1
LUI 0x12, R2
LUI 0x07, R3
MOVI 0x28, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x0C, R15
ADD R15, R6
LUI 0x01, R9
JUC R2

@0728 #Draw Enemy Ship 2
LUI 0x07, R3
MOVI 0x30, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x0E, R15
ADD R15, R6
LUI 0x01, R9
JUC R2

@0730 #Draw Enemy Ship 3
LUI 0x07, R3
MOVI 0x38, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x10, R15
ADD R15, R6
LUI 0x01, R9
JUC R2

@0738 #Draw Enemy Ship 4
LUI 0x07, R3
MOVI 0x40, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x12, R15
ADD R15, R6
LUI 0x01, R9
JUC R2

@0740 #Draw Enemy 5
LUI 0x07, R3
MOVI 0x48, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x14, R15
ADD R15, R6
LUI 0x01, R9
JUC R2

@0748 #Draw Enemy 6
LUI 0x07, R3
MOVI 0x50, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x16, R15
ADD R15, R6
LUI 0x03, R9
JUC R2

@0750 #Draw Enemy 7
LUI 0x07, R3
MOVI 0x58, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x18, R15
ADD R15, R6
LUI 0x03, R9
JUC R2

@0758 #Draw Enemy 8
LUI 0x07, R3
MOVI 0x60, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x1A, R15
ADD R15, R6
LUI 0x03, R9
JUC R2

@0760 #Draw Enemy 9
LUI 0x07, R3
MOVI 0x68, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x1C, R15
ADD R15, R6
LUI 0x03, R9
JUC R2

@0768 #Draw Enemy 10
LUI 0x07, R3
MOVI 0x70, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x1E, R15
ADD R15, R6
LUI 0x03, R9
JUC R2

@0770 #Draw Enemy 11
LUI 0x07, R3
MOVI 0x78, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x20, R15
ADD R15, R6
LUI 0x02, R9
JUC R2

@0778 #Draw Enemy 12
LUI 0x07, R3
MOVI 0x80, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x22, R15
ADD R15, R6
LUI 0x02, R9
JUC R2

@0780 #Draw Enemy 13
LUI 0x07, R3
MOVI 0x88, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x24, R15
ADD R15, R6
LUI 0x02, R9
JUC R2

@0788 #Draw Enemy 14
LUI 0x07, R3
MOVI 0x90, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x26, R15
ADD R15, R6
LUI 0x02, R9
JUC R2

@0790 #Draw Enemy 15
LUI 0x07, R3
MOVI 0x98, R15
ADD R15, R3
LUI 0xA0, R6
MOVI 0x28, R15
ADD R15, R6
LUI 0x02, R9
JUC R2

@0798

JUC R0

@0900
#================================================
#METHOD - DRAW BACKGROUND
#(INPUT R1 - Return Address)
#(R2,R4,R5,R7,R8,R13,R14,R15)
#================================================
#Setup
LUI 0x10, R2 #Draw 16x16
MOVI 0x00, R4 #i
MOVI 0x00, R5 #j
MOVI 0x28, R7 #ii
MOVI 0x0A, R8 #jj
MOVI 0x01, R10 #This will be used to move addresses by 1
LUI 0xB0, R13 #VGA Top row

@0907 #While(ii != i)
MOV R4, R15
CMP R7, R15
JEQ R1 
LUI 0x09, R14
MOVI 0x0e, R15
ADD R15, R14
MOV R13, R6

  @090e #doWhile(jj != j)
    LUI 0x09, R3
    MOVI 0x13, R15
    ADD R15, R3
    LUI 0x05, R9
    JUC R2 #Draw16x16
    @0913
    LUI 0x09, R3
    MOVI 0x18, R15
    ADD R15, R3
    #R6 already set
    LUI 0x06, R9
    JUC R2 #Draw16x16
    @0918
    LUI 0x09, R3
    MOVI 0x1d, R15
    ADD R15, R3
    #R6 already set
    LUI 0x07, R9
    JUC R2 #Draw16x16
    @091d
    ADD R10, R5 #j++
  MOV R5, R15
  CMP R8, R15
  JNE R14
MOVI 0x04, R15
ADD R15, R13
ADD R10, R4
LUI 0x00, R5
LUI 0x09, R14
MOVI 0x07, R15
ADD R15, R14

JUC R14

@1000
#================================================
#METHOD - DRAW 16 by 16 Glyph
#(INPUT R3 - Return Address)
#(INPUT R6 - the address of the glyphs x-pos)
#(INPUT R9 - the Glyph to draw upper left corner)
#================================================
#Setup
MOVI 0x01, R10 #To move addresses by 1
MOVI 0x10, R11 #Sub 4x4 glyph vertical shift
MOVI 0x9D, R12 #Vertical Shift by 157

#First row of sub 4x4's
STOR R9, R6 #(0,0)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(0,1)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(0,2)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(0,3)

#Second row of sub 4x4's
ADD R12, R6 #Shift down to next row
ADD R11, R9
STOR R9, R6 #(1,0)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(1,1)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(1,2)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(1,3)

#Third row of sub 4x4's
ADD R12, R6 #Shift down to next row
ADD R11, R9
STOR R9, R6 #(2,0)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(2,1)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(2,2)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(2,3)

#Fourth row of sub 4x4's
ADD R12, R6 #Shift down to next row
ADD R11, R9
STOR R9, R6 #(3,0)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(3,1)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(3,2)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(3,3)

ADD R12, R6 # This wont effect anything other than helping the DrawBackground Method as long as R6 is set again before it is used

JUC R3

@1100
#================================================
#METHOD - DRAW 8 by 8 Glyph
#(INPUT R3 - Return Address)
#(INPUT R6 - the address of the glyphs x-pos)
#(INPUT R9 - the Glyph to draw upper left corner)
#================================================
#Setup
MOVI 0x01, R10 #To move addresses by 1
MOVI 0x10, R11 #Sub 4x4 glyph vertical shift
MOVI 0x9D, R12 #Vertical Shift by 157

#First row of sub 4x4's
STOR R9, R6 #(0,0)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(0,1)
ADD R10, R6
ADD R11, R9

#Second row of sub 4x4's
ADD R12, R6 #Shift down to next row
ADD R11, R9
STOR R9, R6 #(1,0)
ADD R10, R6
ADD R11, R9
STOR R9, R6 #(1,1)
ADD R10, R6
ADD R11, R9

JUC R3

@1200
#================================================
#METHOD - Check if Enemy alive and draw if so
#(INPUT R3 - Return Address)
#(INPUT R6 - the address of enemy alive)
#(INPUT R9 - the Glyph to draw upper left corner)
#================================================
#Setup
MOVI 0x01, R10 #To move addresses by 1
MOVI 0x00, R14
LOAD R6, R15
CMP R15, R14
JEQ R3
ADD R10, R6
LUI 0x10, R15

JUC R15

@1300
#================================================
#METHOD - Remove shot
#(INPUT R3 - Return Address)
#================================================
#Setup
LUI 0xA0, R6
MOVI 0x01, R15
ADD R15, R6
MOVI 0x01, R10 #To move addresses by 1
MOVI 0x00, R15
STOR R15, R6
ADD R10, R6
LUI 0xB0, R15
STOR R15, R6

JUC R3


